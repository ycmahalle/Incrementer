{"version":3,"sources":["App.jsx","Action/index.js","Reducer/UpDown.js","Reducer/index.js","store.js","index.js"],"names":["App","numState","useSelector","state","changeNumber","dispatch","useDispatch","className","onClick","type","param","readOnly","value","action","rootReducer","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","subscribe","console","log","getState","ReactDOM","render","document","getElementById"],"mappings":"mMA6BeA,EAxBJ,WACP,IAAMC,EAAWC,aAAY,SAACC,GAAS,OAAOA,EAAMC,gBAC9CC,EAAWC,cACjB,OACI,mCACA,sBAAKC,UAAU,OAAf,UAEI,oBAAIA,UAAU,cAAd,4CACA,oBAAIA,UAAU,cAAd,mCACA,sBAAKA,UAAU,QAAf,UACG,wBAEAC,QAAS,kBAAIH,ECTnB,CAAEI,KAAM,YAAaC,MDSiB,KAFhC,iBAGA,uBAAOC,UAAQ,EAACF,KAAK,OACpBG,MAAOX,IAER,wBACAO,QAAS,kBAAIH,ECrBnB,CACLI,KAAM,YACNC,MDmB2C,MADhC,0B,OERAN,EAXM,WAAmC,IAAlCD,EAAiC,uDAFlC,EAEuBU,EAAW,uCACrD,OAAQA,EAAOJ,MACb,IAAK,YACH,OAAON,EAAQU,EAAOH,MACxB,IAAK,YACH,OAAOP,EAAQU,EAAOH,MACxB,QACE,OAAOP,ICFEW,EAJKC,YAAgB,CAClCX,iBCIaY,EALDC,YACZH,EACAI,OAAOC,8BAAgCD,OAAOC,gCCChDH,EAAMI,WAAU,kBAAMC,QAAQC,IAAIN,EAAMO,eACxCC,IAASC,OACP,cAAC,IAAD,CAAUT,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFU,SAASC,eAAe,W","file":"static/js/main.a3b44cfc.chunk.js","sourcesContent":["\r\nimport React from \"react\"; \r\nimport \"./css/inc.css\"; \r\nimport { useSelector,useDispatch } from \"react-redux\";   \r\nimport { Decrement, Increment } from \"./Action\";\r\nconst App =()=>{\r\n    const numState = useSelector((state)=>{return state.changeNumber});\r\n    const dispatch = useDispatch();\r\n    return(\r\n        <>\r\n        <div className=\"main\">\r\n\r\n            <h1 className=\"text-center\">Increment / Decrement Counter </h1>\r\n            <h2 className=\"text-center\">using React and Redux</h2>\r\n            <div className=\"box  \">\r\n               <button \r\n                \r\n               onClick={()=>dispatch(Decrement(2))}> - </button>\r\n               <input readOnly type=\"text\"\r\n                value={numState} \r\n                /> \r\n               <button \r\n               onClick={()=>dispatch(Increment(10))}\r\n               > + </button>\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\nexport default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n// import List from \"./List\";\r\n// const App=()=>{\r\n//     const [task,setTask]=useState(\"\");\r\n//     const [list , setList]=useState([]);\r\n//     const inputEvent=(event)=>{\r\n//         // console.log(event.target.value);\r\n//         setTask(event.target.value);\r\n//     }   \r\n//     const submitForm=(event)=>{\r\n//         event.preventDefault();\r\n//         if(task === ''){\r\n//             alert(\"Enter Items\");    \r\n//         }else{\r\n//             setList((oldItems)=>{\r\n//                 return[...oldItems,task];\r\n//             });\r\n//             setTask(\"\");\r\n//         }\r\n//         // alert();\r\n//     }\r\n//     const deleteItem=(id)=>{\r\n//             console.log(id);\r\n//             // alert();\r\n//             setList((oldItems)=>{\r\n//                return oldItems.filter((elem,index)=>{\r\n//                     return index !== id;\r\n//                  });\r\n//             });\r\n//     }\r\n//     return(\r\n//         <>\r\n//             <div className=\"container\">\r\n//                 <div className=\"card\">\r\n//                     <div className=\"card-header\">\r\n//                         <h1>To Do List</h1>\r\n//                     </div>\r\n//                     <div className=\"card-form\">\r\n//                         <form onSubmit={submitForm}>\r\n//                         <input type=\"text\"\r\n//                         value={task}\r\n//                             placeholder=\"Add Item\"\r\n//                             onChange={inputEvent}\r\n//                         />\r\n//                         <button type=\"submit\" className=\"addBtn\"> + </button>\r\n//                         </form>\r\n//                     </div>\r\n//                     <div className=\"card-list\">\r\n//                         <ul>\r\n                                \r\n//                                 {list.map((element,index)=> \r\n//                                      <List taskName={element}\r\n//                                          key={index}\r\n//                                          id={index}\r\n//                                          click={deleteItem}\r\n//                                      />\r\n//                                  )}\r\n//                             <li>\r\n\r\n//                                 {/* <span></span>  {list} */}\r\n//                             </li>\r\n//                         </ul>\r\n//                     </div>\r\n//                 </div>\r\n//             </div>\r\n//         </>\r\n//     );\r\n// }\r\n// export default App;\r\n","export const Increment = (num) => {\r\n  return {\r\n    type: \"Increment\",\r\n    param: num,\r\n  };\r\n};\r\n\r\nexport const Decrement = (num) => {\r\n  return { type: \"Decrement\", param: num };\r\n};\r\n","const InitialState = 0;\r\n\r\nconst changeNumber = (state = InitialState, action) => {\r\n  switch (action.type) {\r\n    case \"Increment\":\r\n      return state + action.param;\r\n    case \"Decrement\":\r\n      return state - action.param;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default changeNumber;\r\n","import { combineReducers } from \"redux\";\r\nimport changeNumber from \"./UpDown\";\r\n\r\nconst rootReducer = combineReducers({\r\n  changeNumber  ,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"./Reducer/index\";\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\nstore.subscribe(() => console.log(store.getState()));\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}